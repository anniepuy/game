{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useState } from 'react';\nimport PrimaryButton from \"../components/PrimaryButton\";\nimport Colors from \"../constants/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction StartGameScreen(_ref) {\n  var onPickNumber = _ref.onPickNumber;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredNumber = _useState2[0],\n      setEnteredNumber = _useState2[1];\n\n  var numberInputHandler = function numberInputHandler(enteredText) {\n    setEnteredNumber(enteredText);\n  };\n\n  var resetInputHandler = function resetInputHandler() {\n    setEnteredNumber('');\n  };\n\n  var confirmInputHandler = function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredNumber);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert('Invalid Number!', 'Number has to be a number between 1 and 99.', [{\n        text: 'Okay',\n        style: 'destructive',\n        onPress: resetInputHandler\n      }]);\n      return;\n    }\n\n    onPickNumber(chosenNumber);\n  };\n\n  return _jsxs(View, {\n    style: styles.inputContainer,\n    children: [_jsx(TextInput, {\n      style: styles.numberInput,\n      maxLength: 2,\n      keyboardType: \"number-pad\",\n      autoCapitalize: \"none\",\n      autoCorrect: false,\n      onChangeText: numberInputHandler,\n      value: enteredNumber\n    }), _jsxs(View, {\n      style: styles.buttonsContainer,\n      children: [_jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(PrimaryButton, {\n          onPress: resetInputHandler,\n          children: \"Reset\"\n        })\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(PrimaryButton, {\n          onPress: confirmInputHandler,\n          children: \"Confirm\"\n        })\n      })]\n    })]\n  });\n}\n\nexport default StartGameScreen;\nvar styles = StyleSheet.create({\n  inputContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    marginTop: 100,\n    marginHorizontal: 24,\n    borderRadius: 8,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 6,\n    shadowOpacity: .25,\n    elevation: 4,\n    backgroundColor: Colors.primary800\n  },\n  numberInput: {\n    height: 50,\n    width: 50,\n    textAlign: 'center',\n    fontSize: 32,\n    borderBottomColor: Colors.accent500,\n    borderBottomWidth: 2,\n    color: Colors.accent500,\n    marginVertical: 8,\n    fontWeight: 'bold'\n  },\n  buttonsContainer: {\n    flexDirection: 'row'\n  },\n  buttonContainer: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/annhagan/Documents/SourceCode/ReactNavtiveProjects/game/screens/StartGameScreen.js"],"names":["useState","PrimaryButton","Colors","StartGameScreen","onPickNumber","enteredNumber","setEnteredNumber","numberInputHandler","enteredText","resetInputHandler","confirmInputHandler","chosenNumber","parseInt","isNaN","Alert","alert","text","style","onPress","styles","inputContainer","numberInput","buttonsContainer","buttonContainer","StyleSheet","create","justifyContent","alignItems","padding","marginTop","marginHorizontal","borderRadius","shadowColor","shadowOffset","width","height","shadowRadius","shadowOpacity","elevation","backgroundColor","primary800","textAlign","fontSize","borderBottomColor","accent500","borderBottomWidth","color","marginVertical","fontWeight","flexDirection","flex"],"mappings":"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","sourcesContent":["import { TextInput, View, StyleSheet, Alert } from 'react-native';\nimport { useState } from 'react';\nimport PrimaryButton from '../components/PrimaryButton';\nimport Colors from '../constants/colors';\n\nfunction StartGameScreen({onPickNumber}) {\n    //state, bind to TextInput with value prop\n    const [enteredNumber, setEnteredNumber] = useState('');\n\n    //function to update state based on user key input\n    const numberInputHandler = (enteredText) => {\n        setEnteredNumber(enteredText)\n    }\n\n    const resetInputHandler = () => {\n        setEnteredNumber('')\n    }\n    \n    const confirmInputHandler = () => {\n        const chosenNumber = parseInt(enteredNumber);\n        if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n            Alert.alert('Invalid Number!', 'Number has to be a number between 1 and 99.',\n            [{ text: 'Okay', style: 'destructive', onPress: resetInputHandler}]\n        );\n            return;\n        }\n        onPickNumber(chosenNumber);   \n    }\n\n    return (\n        <View style={styles.inputContainer}>\n            <TextInput \n                style={styles.numberInput} \n                maxLength={2} \n                keyboardType=\"number-pad\"\n                autoCapitalize='none'\n                autoCorrect={false} \n                onChangeText={numberInputHandler}\n                value={enteredNumber}\n            />\n            <View style={styles.buttonsContainer}>\n                <View style={styles.buttonContainer}>\n                    <PrimaryButton onPress={resetInputHandler}>Reset</PrimaryButton>\n                </View>\n                <View style={styles.buttonContainer}>\n                    <PrimaryButton onPress={confirmInputHandler}>Confirm</PrimaryButton>\n                </View>\n            </View>\n        </View>\n\n    )\n}\n\nexport default StartGameScreen;\n\nconst styles = StyleSheet.create({\n    inputContainer: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: 16,\n        marginTop: 100,\n        marginHorizontal: 24,\n        borderRadius: 8,\n        shadowColor: 'black',\n        shadowOffset: {width: 0, height: 2},\n        shadowRadius: 6,\n        shadowOpacity: .25,\n        elevation: 4,\n        backgroundColor: Colors.primary800,\n    },\n    numberInput: {\n        height: 50,\n        width: 50,\n        textAlign: 'center',\n        fontSize: 32,\n        borderBottomColor: Colors.accent500,\n        borderBottomWidth: 2,\n        color: Colors.accent500,\n        marginVertical: 8,\n        fontWeight: 'bold'\n    },\n    buttonsContainer: {\n        flexDirection: 'row'\n    },\n    buttonContainer: {\n        flex: 1\n    }\n  \n});\n"]},"metadata":{},"sourceType":"module"}